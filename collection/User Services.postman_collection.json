{
	"info": {
		"_postman_id": "3e88da68-263c-49c8-bb02-592c389b4570",
		"name": "User Services",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "38731091",
		"_collection_link": "https://alquilerteam.postman.co/workspace/Alquiler_team-Workspace~d92cba0d-55ce-4f23-86eb-4cfa18b74ccc/collection/43473998-3e88da68-263c-49c8-bb02-592c389b4570?action=share&source=collection_link&creator=38731091"
	},
	"item": [
		{
			"name": "get all users",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}users/",
					"host": [
						"{{url}}users"
					],
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"response is ok\",  () => {\r",
							"    if(pm.response.to.have.status(200)) {\r",
							"        var jsonData = pm.response.json();\r",
							"        pm.collectionVariables(\"token\",jsonData.token);\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"juan.libreros@gmail.com\",\r\n    \"password\":\"Hola1234\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}users/login",
					"host": [
						"{{url}}users"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "create user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"  pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"El usuario 'Juan' se ha creado correctamente\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.msg).to.eql(\"User created\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Juan Sebastian Libreros\",\r\n    \"user_Document\": \"1115412750\",\r\n    \"email\": \"juan.libreros@gmail.com\",\r\n    \"password\": \"Hola1234\",\r\n    \"cellphone\": 10,\r\n    \"adress\": \"Calle 123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}users/",
					"host": [
						"{{url}}users"
					],
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"El usuario 'Juan' se ha recuperado con exito\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"Juan Sebastian Libreros\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}users/13",
					"host": [
						"{{url}}users"
					],
					"path": [
						"13"
					]
				}
			},
			"response": []
		},
		{
			"name": "update user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"El usuario 'Juan' se ha creado correctamente\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.msg).to.eql(\"User updated\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"adress\" : \"Calle 234\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}users/juan.libreros@gmail.com",
					"host": [
						"{{url}}users"
					],
					"path": [
						"juan.libreros@gmail.com"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"  pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}users/juan.libreros@gmail.com",
					"host": [
						"{{url}}users"
					],
					"path": [
						"juan.libreros@gmail.com"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "http://localhost:3000/api/",
			"type": "string"
		},
		{
			"key": "token",
			"value": "token",
			"type": "string"
		}
	]
}